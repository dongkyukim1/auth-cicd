apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: app
spec:
  selector:
    app: backend
  ports:
    - port: 4000
      targetPort: 4000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "4000"
    spec:
      containers:
        - name: backend
          image: dongkyu93/auth-backend:latest
          ports:
            - containerPort: 4000
          env:
            - name: PORT
              value: "4000"
            - name: MONGO_URI
              value: "mongodb+srv://wlsntus55_db_user:4441@cluster0.mqjrmwm.mongodb.net/"
            - name: MONGO_DB_NAME
              value: "authdb"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: jwt
            - name: JWT_REFRESH_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: jwt_refresh
            - name: REDIS_URL
              value: "redis://redis.app.svc.cluster.local:6379"
            - name: SMTP_HOST
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: host
            - name: SMTP_PORT
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: port
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: user
            - name: SMTP_PASS
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: pass
            - name: SMTP_FROM
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: from
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
 
